#!/bin/bash

################ common header identical except for usage, getopts etc #########################################################################################################


Usage() {
  cat <<EOF
usage: ${0##*/} [options] </path/to/pkg/dir>

  -d < distro >
  -d <kali|stable|unstable|testing|ubuntu>
  
  -i <"local repo name local repo name ..">
		space delimited list or single
		element
  -i < include built .changes to extra local 
	repos work|testing|unstable|stable|saucy>
  
  
  -g
  -g <also include packages into git repo>
  
  This script uses pbuilder and reprepro
  to build the package in the current dir
  result is found at the location
  specified in aaa-master-configure
  as aaa_build_result
  

EOF
}



if [[ $1 = @(-h|--help) ]]; then
  Usage
  exit 1
fi

#source common functions
if [[ -r /usr/bin/aaa-common-functions ]]; then
	. /usr/bin/aaa-common-functions
	if [[ ! $? -eq 0 ]]; then
		echo " failed to source common functions at /usr/bin/aaa-common-functions"
		echo "quitting !! "
		exit 1
	fi
else
	echo " failed to find common functions at /usr/bin/aaa-common-functions"
	echo "quitting !! "
	exit 1
fi

#source config
if [ -r /usr/share/aaa/aaa-master-config ]; then
  Info "found my master config file.. reading it"
  . /usr/share/aaa/aaa-master-config
	if [ -r $HOME/.aaa-local-config ]; then
		Info "found a local settings file.. reading it"
		. $HOME/.aaa-local-config
	fi
else
	Fuck "Failed to find master config file quitting"
	exit 1
fi

#source settings
if [ -r $HOME/.aaa_settings ]; then
  Info "found a settings file.. reading it"
  . $HOME/.aaa_settings
fi

# get options and arguments http://wiki.bash-hackers.org/howto/getopts_tutorial
export AAA_DEBIAN_DISTRO=""
export AAA_SUPRESS_LOCAL_PBUILDERRC="yes"
#remove previous run config if any, will be rewritten when aaa-master-config is sourced
#if no command arguments /etc/pbuilderrc is used instead which is  fallback
rm -rf $HOME/.pbuilderrc

while getopts ":gd:i:" opt; do
  case $opt in
    d) Info "< -d $OPTARG > passed" 
		case $OPTARG in
	kali|testing|unstable|stable|ubuntu) Info "-d $OPTARG is valid, building for $OPTARG"
										SwitchDistro "$OPTARG" ;;
									  *) Fuck "<-d $OPTARG> is not valid, needs to be <-d kali,stable,unstable,testing or ubuntu>" ;;
		esac ;;
	
	i) Info "< -i $OPTARG > passed" 
	
		case $OPTARG in
		$aaa_work_repo|testing|unstable|stable|saucy) Info "-i $OPTARG is valid, will include result .changes in repo name,s $OPTARG"
									include_chng=1 
									repo_name="$OPTARG" ;;
									  *) Fuck "<-i $OPTARG> is not valid, needs to be -i<$aaa_work_repo,stable,unstable,testing or saucy>" ;;
		esac ;;
		
	g) add_to_git_repo=1 ;;
   \?) Fuck "Invalid option: -$OPTARG" ;;
    :) Fuck "Option -$OPTARG requires a distro name, kali,stable,unstable,testing or ubuntu" ;;
  esac
done
#shift the options and args out the way http://wiki.bash-hackers.org/howto/getopts_tutorial
shift $((OPTIND-1))
#and lets parse it

[[ -z $1 ]] && Fuck "need directory target"
[[ -d $1/debian ]] || Fuck "target dir does not contain a debian subdir"




########## end of common header #############################################################################################################################################

[[ "$(id -u)" != "0" ]] && Fuck "This script must be run as root"


#check script dependencies
CheckMyDeps "reprepro pbuilder dpkg-source"
[[ $aaa_setup_build_base_complete == yes ]] || Fuck "this script needs the base build environment setup, run aaa_setup-build-base"
[[ $aaa_setup_build_env_complete == "yes" ]] || Fuck "this script needs the build environment setup, run aaa-setup-build-env"

#setup working dirs
CleanMyBuildArea

#update / create base immage
UpdateBase

# build  source package
dpkg-source -b "$1"

Test pbuilder --build *.dsc

cd "$aaa_build_result"



for rname in $repo_name ; do 
	CleanMyRepo "$rname" "$aaa_localrepo_dir"
	Test reprepro -b "$aaa_localrepo_dir" include "$rname" *.changes
	[[ $add_to_git_repo -eq 1 ]] && CleanMyRepo "$rname" "$aaa_git_repo_dir"
	[[ $add_to_git_repo -eq 1 ]] && Test reprepro -b "$aaa_git_repo_dir" include $aaa_debian_distro *.changes
done


