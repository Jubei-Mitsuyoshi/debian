#!/bin/bash

################ common header identical except for usage, getopts etc #########################################################################################################


Usage() {
  cat <<EOF
usage: ${0##*/} [options] </path/to/pkg/dir>

  checks packages on system.. bla bla
  

EOF
}



if [[ $1 = @(-h|--help) ]]; then
  Usage
  exit 1
fi

#source common functions
if [[ -r /usr/bin/aaa-common-functions ]]; then
	. /usr/bin/aaa-common-functions
	if [[ ! $? -eq 0 ]]; then
		echo " failed to source common functions at /usr/bin/aaa-common-functions"
		echo "quitting !! "
		exit 1
	fi
else
	echo " failed to find common functions at /usr/bin/aaa-common-functions"
	echo "quitting !! "
	exit 1
fi

#source config
if [ -r /usr/share/aaa/aaa-master-config ]; then
  Info "found my master config file.. reading it"
  . /usr/share/aaa/aaa-master-config
	if [ -r $HOME/.aaa-local-config ]; then
		Info "found a local settings file.. reading it"
		. $HOME/.aaa-local-config
	fi
else
	Fuck "Failed to find master config file quitting"
	exit 1
fi

#source settings
if [ -r $HOME/.aaa_settings ]; then
  Info "found a settings file.. reading it"
  . $HOME/.aaa_settings
fi


 
for installed_pkg in $(dpkg-query -W | grep -v "kali" | awk '{print $1; }'); do
	Info "checking package $installed_pkg"
	found_one=$(apt-cache madison "$installed_pkg" | sed 's/http:\/\/http.kali.org\/kali\/ kali//' | sed 's/http:\/\/security.kali.org\/kali-security\/ kali//' | grep "kali")
	if [[ ! -z $found_one ]]; then
		Warn "the package $installed_pkg is present in the kali repos as a kali version"
		Warn "but in your system the version is not the kali one"
		quit_char=""
		while [[ ! $quit_char == "q" ]]; do
			Warn "$found_one"
			MenuActive "v" "run apt-cache madison $installed_pkg"
			MenuActive "a" "run aptitude versions $installed_pkg"
			MenuActive "r" "run aptitude"
			MenuActive "any other key" "to continue finding"
			read -s -n1 _AXE_TMP_CHAR
			case "$_AXE_TMP_CHAR" in
				v|V) vdetail=$(apt-cache madison "$installed_pkg")
					Info "$vdetail" ;;
				a|A) adetail=$(aptitude versions $installed_pkg)
					Info "$adetail" ;;
				r|R) aptitude ;;
				*) quit_char="q" ;;
			esac
		done
	fi
done
