#!/bin/bash

# vdi mounter v0.0.2 by bonafide a_t martica d_o_t org (sorry about v0.0.1)
# thanks to http://bethesignal.org/blog/2011/01/05/how-to-mount-virtualbox-vdi-image/
#
# requires nbd and qemu
# don't forget to load the nbd module with max_part=8 or so...

# Some important configuration:
nbd="/dev/nbd0"         # default network block device
mntdir="/mnt"           # folder where mount points will be created (and destroyed)
mountoptions=""    # some paranoia
qemunbdoptions=""     # ro also (see above)
verbose=1



#check nbd device not alredy busy

#if mount|grep "$workingdir/$1"; then
#	echo -e -n  "$workingdir/$1 already mounted, umounting\n"
#	umount $mountdir
#fi

echo -e -n  "default network block device is $nbd press c to change it \n"
read -s -n1 _AXE_TMP_CHAR
if [[ $_AXE_TMP_CHAR == "c" || $_AXE_TMP_CHAR == "C" ]]; then
	echo -e -n  "enter new nbd, values are 1-16 followed by return"
	read -s _AXE_TMP_CHAR2
	nbd="/dev/nbd$_AXE_TMP_CHAR2"
fi


# wait for fdisk to see partitions
sleepinterval=0.25      # seconds
sleeptimeout=5          # seconds
iterations=`bc <<< "$sleeptimeout / $sleepinterval"`

blather () {
 if [ $verbose == 1 ]; then
  echo -e -n "$1"
 fi
}

stopit () {
  qemu-nbd -d $nbd > /dev/null
}

getname () {
 partname=$(sed -e "s/\/dev\//`sed -e "s/^.*\///;s/ /_/g" <<< $1`_/" <<< $part)
}

while getopts d:vh options; do   
 case "$options" in
  [?]|h) echo "Usage: $0 [options] [vdi file]"
         echo " -d [network block device] default is $nbd"
         echo " -v Be verbose."
         echo " -h This help text."
         exit 1;;
      v) verbose=1;;
      d) nbd="$OPTARG";;
 esac
done
shift $(( OPTIND - 1 ))

#if [ "`file $nbd`" == "${nbd}: block special" ]; then

 error=0
 if ! [ -e "$1" ]; then
  echo "VDI file does not exist."
  error=1
# else
#  if [ "`qemu-img check "$1" 2> /dev/null; echo $?`" == "1" ]; then
#   echo "VDI file $1 is invalid."
 #  error=1
#  fi
 fi
 if [ $error == 1 ]; then
  echo "Quitting."
  exit 1
 fi
 blather "`qemu-img info "$1"`\n"
 blather "Attaching image $1 to $nbd "
 qemu-nbd $qemunbdoptions -c $nbd "$1"
 timeout=0
 while [ $timeout -le $iterations ]; do
  parts=`fdisk -l $nbd | sed -n -e '/swap\|Extended/d;/^\/dev\//p' | awk '{ print $1 }'`
  if [ "$parts" == "" ]; then
   timeout=$(( $timeout + 1 ))
   blather "."
   sleep $sleepinterval
  else
   break
  fi
 done
 blather "\n"
 if [ $timeout -ge $iterations ]; then
  blather "Can't attach image $1 to $nbd \n"
  stopit
  exit 1
 fi
 for part in $parts; do
  getname "$1"
  blather "Mounting partition $part on $mntdir/$partname\n"
  mkdir $mntdir/$partname
  mount $mountoptions $part $mntdir/$partname
 done
 echo "Done! Press enter to unmount volume(s)."
 read somevalue
 for part in $parts; do
  getname "$1"
  blather "Unmounting partition $part\n"
  umount $part
  rmdir $mntdir/$partname
 done
 blather "Deattaching image $1 from $nbd ... "
 stopit
 blather "Finished.\n"
 exit 0
#else
# echo "$nbd is not a block device?"
#fi
exit 1
